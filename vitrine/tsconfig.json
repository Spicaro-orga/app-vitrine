{
  "compilerOptions": {
    // Enable top-level await, and other modern ESM features.
    "target": "ESNext",
    "module": "ESNext",
    // Enable module resolution without file extensions on relative paths, for things like npm package imports.
    "moduleResolution": "Bundler",
    // Allow importing TypeScript files using their native extension (.ts(x)).
    "allowImportingTsExtensions": true,
    // Enable JSON imports.
    "resolveJsonModule": true,
    // Enforce the usage of type-only imports when needed, which helps avoiding bundling issues.
    "verbatimModuleSyntax": true,
    // Ensure that each file can be transpiled without relying on other imports.
    // This is redundant with the previous option, however it ensures that it's on even if someone disable `verbatimModuleSyntax`
    "isolatedModules": true,
    // Astro directly run TypeScript code, no transpilation needed.
    "noEmit": true,
    // Report an error when importing a file using a casing different from another import of the same file.
    "forceConsistentCasingInFileNames": true,
    // Properly support importing CJS modules in ESM
    "esModuleInterop": true,
    // Skip typechecking libraries and .d.ts files
    "skipLibCheck": true,
    // Allow JavaScript files to be imported
    "allowJs": true,
    // Enable strict mode. This enables a few options at a time, see https://www.typescriptlang.org/tsconfig#strict for a list.
    "strict": true,
    "jsx": "react-jsx",
    "jsxImportSource": "react",

    // Additional settings from base config
    "sourceMap": true,
    "declaration": false,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "importHelpers": true,
    "lib": ["es2020", "dom"],
    "skipDefaultLibCheck": true,
    "baseUrl": ".",

    // Path mappings for local libraries
    "paths": {
      "@simplified-stack/i18n": ["../libs/i18n/src/index.ts"],
      "@spicaro/common": ["../libs/ui/common/src/index.ts"],
      "@spicaro/shadcn": ["../libs/ui/shadcn/src/index.ts"],
      "@spicaro/vitrine/*": ["src/*"]
    }
  },
  "include": ["src", "../libs/*/src/**/*"],
  "exclude": ["node_modules", "dist", "coverage"]
}
